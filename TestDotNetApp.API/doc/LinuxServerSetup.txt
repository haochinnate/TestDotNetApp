*** LINUX SERVER SETUP USING A NEWLY CREATED DIGITAL OCEAN LAMP SERVER ***

1. ssh root@ipaddressOfLinuxServer (follow instructions to change password)

1.5 
> cat /root/.digitalocean_password
// can get root_mysql_pass="password"

2. Set up mysql (password available from welcome message)

> mysql -u root -p

> CREATE USER 'appuser'@'localhost' IDENTIFIED BY 'Pa$$w0rd';
> GRANT ALL PRIVILEGES ON *.* TO 'appuser'@'localhost' WITH GRANT OPTION;
> FLUSH PRIVILEGES;

> quit

3.  Install the dotnet runtime(without SDK)
(follow instructions from here https://dotnet.microsoft.com/download/linux-package-manager/ubuntu18-04/runtime-current)


4.  Configure Apache

> a2enmod proxy proxy_http proxy_html

> systemctl restart apache2


5.  Configure the virtual host

> sudo nano /etc/apache2/sites-available/datingapp.conf 
(create new file)

```conf

<VirtualHost *:80>
ProxyPreserveHost On
ProxyPass / http://127.0.0.1:5000/
ProxyPassReverse / http://127.0.0.1:5000/

ErrorLog /var/log/apache2/datingapp-error.log
CustomLog /var/log/apache2/datingapp-access.log common

</VirtualHost>

```

> Ctrl+ X to leave 


6. Enable the site 

> a2ensite datingapp
(name of configuration file, 在/apache2/sites-available/ 裡面)

> systemctl reload apache2

------ deploy the published app before going further ------

7.  Add the deploy.reloaded extension to VS Code

> 在 VS code 的 extension 搜尋 deploy(Reloaded)

8.  Add a settings.json file in the .vscode folder and add the following:

> 在 .vscode 資料夾中 建立新檔案 settings.json, 可能還要修改檔案&路徑名稱


```json
{
    "deploy.reloaded": {
        "packages": [
            {
                "name": "Version 1.0.0",
                "description": "Package version 1.0.0",

                "files": [
                    "DatingApp.API/bin/Release/netcoreapp2.2/publish/**"
                ]
            }
        ],

        "targets": [
            {
                "type": "sftp",
                "name": "Linux",
                "description": "SFTP folder",

                "host": "165.22.134.96", "port": 22,
                "user": "root", "password": "yourpassword",

                "dir": "/var/datingapp",
                "mappings": {
                    "DatingApp.API/bin/Release/netcoreapp2.2/publish/**": "/"
                }
            }
        ]
    }
}
```


8.  Publish the dotnet application:

> dotnet publish -c Release

9.  Deploy the 'package' using the command palette - deploy package

> Ctrl + shift + p,  deploy package

10.  Check the files are on the Linux server:

> ls /var/datingapp/


11.  Set up the kestrel web service

sudo nano /etc/systemd/system/kestrel-web.service

```
// configuration without environment variables

[Unit]
Description=Kestrel service running on Ubuntu 18.04
[Service]
WorkingDirectory=/var/datingapp
ExecStart=/usr/bin/dotnet /var/datingapp/DatingApp.API.dll
Restart=always
RestartSec=10
SyslogIdentifier=datingapp
User=www-data
Environment=ASPNETCORE_ENVIRONMENT=Production
[Install]
WantedBy=multi-user.target
```

```
// configuration with environment variables

[Unit]
Description=Kestrel service running on Ubuntu 18.04
[Service]
WorkingDirectory=/var/datingapp
ExecStart=/usr/bin/dotnet /var/datingapp/DatingApp.API.dll
Restart=always
RestartSec=10
SyslogIdentifier=datingapp
User=www-data
Environment=ASPNETCORE_ENVIRONMENT=Production
Environment='Cloudinary__CloudName=yourcloudname'
Environment='Cloudinary__ApiSecret=yoursecret'
Environment='Cloudinary__ApiKey=yourapikey'
Environment='TokenKey=super secret key'
[Install]
WantedBy=multi-user.target
```


> sudo systemctl enable kestrel-web.service
> sudo systemctl start kestrel-web.service

12.  Ensure the server is listening on Port 5000

> netstat -ntpl

13.  Check the Mysql DB to ensure it is seeded with data:

> mysql -u appuser -p
mysql> show databases;
mysql> use datingapp;
mysql> show tables;
mysql> select * from users;
mysql> quit

14.  Browse to app on Linux server IP address.

// restart apache server
> systemctl restart apache2
> ls /etc/apache2/sites-enabled/
有 000-default.conf 和 datingapp.conf

> a2dissite 000-default
> systemctl reload apache2

http://ipaddress 