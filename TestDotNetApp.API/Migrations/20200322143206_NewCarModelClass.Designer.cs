// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestDotNetApp.API.Data;

namespace TestDotNetApp.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200322143206_NewCarModelClass")]
    partial class NewCarModelClass
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("TestDotNetApp.API.Models.CarModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AirbagsNumber")
                        .HasColumnType("INTEGER");

                    b.Property<double>("BootCapacity")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("DayOfPublish")
                        .HasColumnType("TEXT");

                    b.Property<string>("EnergyForm")
                        .HasColumnType("TEXT");

                    b.Property<double>("FuelConsumption")
                        .HasColumnType("REAL");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<double>("HorsePower")
                        .HasColumnType("REAL");

                    b.Property<int>("Length")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LevelName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Maker")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModelName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SizeAndType")
                        .HasColumnType("TEXT");

                    b.Property<int>("Width")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CarModels");
                });

            modelBuilder.Entity("TestDotNetApp.API.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CarModelId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsMain")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CarModelId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("TestDotNetApp.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TestDotNetApp.API.Models.Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("TestDotNetApp.API.Models.Photo", b =>
                {
                    b.HasOne("TestDotNetApp.API.Models.CarModel", null)
                        .WithMany("Photo")
                        .HasForeignKey("CarModelId");
                });
#pragma warning restore 612, 618
        }
    }
}
